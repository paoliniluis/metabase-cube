version: '3.9'
services:
  node_full_app_embedding_demo:
    build: .
    container_name: webapp_full_app_embedding_demo
    hostname: webapp
    ports:
      - 8080:8080
    networks:
      - metanet1-metabase
    environment:
      - METABASE_URL=http://localhost:3000
      - PORT=8080
      - METABASE_JWT_SHARED_SECRET=ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
    depends_on:
      metabase-cubejs:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 64M
        reservations:
          cpus: '0.5'
          memory: 32M
  metabase-cubejs:
    image: metabase/metabase-enterprise:v1.47.0
    container_name: metabase-cubejs
    hostname: metabase
    volumes: 
      - /dev/urandom:/dev/random:ro
    ports:
      - 3000:3000
    environment: 
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: mysecretpassword
      MB_DB_HOST: postgres-app-db-cubejs
      MB_SITE_URL: http://localhost:3000
      JAVA_TOOL_OPTIONS: -Xmx1488m -Xms500m
      MB_EMBEDDING_APP_ORIGIN: "*"
      MB_ENABLE_EMBEDDING: "true"
      MB_PREMIUM_EMBEDDING_TOKEN: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
      MB_JWT_ENABLED: "true"
      MB_JWT_IDENTITY_PROVIDER_URI: "https://localhost:8080/api/auth/metabase"
      MB_JWT_SHARED_SECRET: "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      MB_EMAIL_SMTP_HOST: maildev-sub
      MB_EMAIL_SMTP_PASSWORD: password
      MB_EMAIL_SMTP_PORT: 1025
      MB_EMAIL_SMTP_SECURITY: none
      MB_EMAIL_SMTP_USERNAME: admin
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1536M
        reservations:
          cpus: '1'
          memory: 1024M
    networks: 
      - metanet1-metabase
    depends_on: 
      postgres-app-db-cubejs:
        condition: service_healthy
    healthcheck:
      test: curl --fail -X GET -I http://localhost:3000/api/health || exit 1
      interval: 20s
      timeout: 5s
      retries: 3
  postgres-app-db-cubejs:
    image: postgres:15.2-alpine
    container_name: postgres-app-db-cubejs
    hostname: postgres-app-db-cubejs
    environment:
      - "POSTGRES_USER=metabase"
      - "POSTGRES_DB=metabase"
      - "POSTGRES_PASSWORD=mysecretpassword"
    volumes:
      - $PWD/postgres_origin:/var/lib/postgresql/data
    networks: 
      - metanet1-metabase
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '1'
          memory: 128M
    # command: -c log_statement=all
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase -d metabase"]
      interval: 10s
      timeout: 5s
      retries: 5
  setup:
    build: setup/.
    container_name: setup
    volumes:
      - $PWD/setup/setup.py:/app/setup.py
    networks:
      - metanet1-metabase
    depends_on:
      metabase-cubejs:
        condition: service_healthy
    command: python /app/setup.py
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 64M
        reservations:
          cpus: '0.5'
          memory: 32M
    environment:
      host: http://metabase
      port: 3000
  cubejs:
    image: cubejs/cube:v0.33
    container_name: cubejs
    hostname: cubejs
    ports:
    - 4000:4000
    environment:
      - CUBEJS_DEV_MODE=true
      - CUBEJS_DB_HOST=postgres-data-cubejs
      - CUBEJS_DB_PORT=5432
      - CUBEJS_DB_NAME=sample
      - CUBEJS_DB_USER=metabase
      - CUBEJS_DB_PASS=metasample123
      - CUBEJS_DB_TYPE=postgres
      - CUBEJS_PG_SQL_PORT=5432
      - CUBEJS_SQL_USER=myusername
      - CUBEJS_SQL_PASSWORD=mypassword
    volumes:
      - $PWD/cube:/cube/conf
    networks:       
      - metanet1-metabase
    depends_on:
      postgres-data-cubejs:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1536M
        reservations:
          cpus: '2'
          memory: 1024M
  postgres-data-cubejs:
    image: metabase/qa-databases:postgres-sample-15
    container_name: postgres-data-cubejs
    hostname: postgres-data-cubejs
    networks:
      - metanet1-metabase
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1536M
        reservations:
          cpus: '2'
          memory: 1024M
    command: -c log_statement=all
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase -d sample"]
      interval: 10s
      timeout: 5s
      retries: 5
  maildev-sub-postgres:
    image: maildev/maildev:2.1.0
    container_name: maildev-sub-postgres
    hostname: maildev-sub
    ports:
    - 3003:1080
    networks:
    - metanet1-metabase
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 64M
        reservations:
          cpus: '0.5'
          memory: 32M
networks: 
  metanet1-metabase:
    driver: bridge